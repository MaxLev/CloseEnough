library(CloseEnough)
cellmovie <- readImage("C:\\Users\\maxen\\Documents\\Panx2_cancers\\2014-08-15_Cell3\\cell.tif")
display(cellmovie, method = "raster")
cellmovie <- readImage("C:\\Users\\maxen\\Documents\\Panx2_cancers\\2014-08-15_Cell3\\cellrgb.tif")
display(cellmovie, method = "raster")
usethis::use_data(cellmovie)
outline <- readImage("C:\\Users\\maxen\\Documents\\Panx2_cancers\\2014-08-15_Cell3\\celloutline.txt")
outline <- read.csv("C:\\Users\\maxen\\Documents\\Panx2_cancers\\2014-08-15_Cell3\\celloutline.txt", sep = "\t", header = F)
View(outline)
names(outline) <- c("x", "y")
usethis::use_data(outline)
mitomask <- readImage("C:\\Users\\maxen\\Documents\\Panx2_cancers\\2014-08-15_Cell3\\mitomask.tif")
display(mitomask)
usethis::use_data(mitomask)
cellmask <- readImage("C:\\Users\\maxen\\Documents\\Panx2_cancers\\2014-08-15_Cell3\\maskcell3.tif")
display(cellmask)
usethis::use_data(cellmask)
trajectory <- read.csv("C:\\Users\\maxen\\Documents\\Panx2_cancers\\2014-08-15_Cell3\\trajcell3.txt", sep = "\t")
View(trajectory)
coordinates <- trajectory
usethis::use_data(coordinates)
trajectory <- Traj(trajectory = coordinates$Trajectory,
frame = coordinates$Frame,
time = 0.186,
time_unit = "s",
x = coordinates$x,
y = coordinates$y,
dim_x = 512,
dim_y = 512,
pixel_size = 80.0886,
pixel_unit = "nanometer")
display(cellmask, method = "raster")
ntraj = nlevels(trajectory["trajectory"])
traj_i <- subset(trajectory["data"], trajectory == i)
lines(traj_i$x, traj_i$y, type="l", col = "black")
ntraj = nlevels(trajectory["trajectory"])
for (i in 1:ntraj) {
traj_i <- subset(trajectory["data"], trajectory == i)
lines(traj_i$x, traj_i$y, type="l", col = "black")
}
trajectory <- rotate_trajectory(trajectory, -90)
trajectory <- mirror_trajectory(trajectory, "x")
display(cellmovie, method = "raster")
ntraj = nlevels(trajectory["trajectory"])
for (i in 1:ntraj) {
traj_i <- subset(trajectory["data"], trajectory == i)
lines(traj_i$x, traj_i$y, type="l", col = "black")
}
ntraj = nlevels(trajectory["trajectory"])
for (i in 1:ntraj) {
traj_i <- subset(trajectory["data"], trajectory == i)
lines(traj_i$x, traj_i$y, type="l", col = "white")
}
display(cellmovie, method = "raster")
ntraj = nlevels(trajectory["trajectory"])
for (i in 1:ntraj) {
traj_i <- subset(trajectory["data"], trajectory == i)
lines(traj_i$x, traj_i$y, type="l", col = "white")
}
coordinates <- read.csv("C:\\Users\\maxen\\Documents\\Panx2_cancers\\2014-08-15_Cell3\\trajcell3.txt", sep = "\t")
View(coordinates)
coordinates <- coordinates %>% filter(Frame < 50)
usethis::use_data(coordinates, overwrite = T)
trajectory <- Traj(trajectory = coordinates$Trajectory,
frame = coordinates$Frame,
time = 0.186,
time_unit = "s",
x = coordinates$x,
y = coordinates$y,
dim_x = 512,
dim_y = 512,
pixel_size = 80.0886,
pixel_unit = "nanometer")
trajectory <- rotate_trajectory(trajectory, -90)
trajectory <- mirror_trajectory(trajectory, "x")
display(cellmovie, method = "raster")
ntraj = nlevels(trajectory["trajectory"])
for (i in 1:ntraj) {
traj_i <- subset(trajectory["data"], trajectory == i)
lines(traj_i$x, traj_i$y, type="l", col = "white")
}
usethis::use_data(trajectory)
library(CloseEnough)
devtools::document()
library(CloseEnough)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(CloseEnough)
hello()
data("cellmask")
data("trajectory")
randtraj <- randomize(trajectory, cellmask)
display(cellmask, method = "raster")
for (i in 1:nrandtraj) {
traj_i <- subset(randtraj["data"], trajectory == i)
lines(traj_i$x, traj_i$y, type="l", col = "blue")
}
source('~/.active-rstudio-document')
devtools::use_vignette("my-vignette")
install.packages("rmarkdown")
usethis::use_vignette("my-vignette")
devtools::build()
devtools::build_vignettes()
devtools::build_vignettes()
usethis::use_package("EBImage")
library(CloseEnough)
data("cellmask")
data("coordinates")
test <- coordinates dplyr::`%>%` filter(Frame < 50)
test <- coordinates dplyr::%>% filter(Frame < 50)
test <- coordinates dplyr::"%>%" filter(Frame < 50)
library(CloseEnough)
usethis::use_pipe()
devtools::document()
library(CloseEnough)
?split
library(CloseEnough)
>do.call
do.call
?do.call
?do
library(CloseEnough)
library(CloseEnough)
library(CloseEnough)
data(cellmask)
data(mitomask)
data("trajectory")
randtraj <- randomize(trajectory = trajectory, mask = cellmask)
eucl <- min_distance(image = mitomask, trajectory = trajectory, channel = 1)
View(eucl)
randeucl <- min_distance(trajectory = randtraj, image = mitomask, channel = 1)
library(CloseEnough)
testplot <- plot(eucl, randeucl)
library(CloseEnough)
testplot <- profileplot(eucl, randeucl)
library(CloseEnough)
library(CloseEnough)
library(CloseEnough)
?rbind
library(CloseEnough)
devtools::document()
library(CloseEnough)
test <- profileplot(traj = eucl, randtraj = randeucl)
devtools::document()
devtools::document()
library(CloseEnough)
test <- profileplot(traj = eucl, randtraj = randeucl)
test <- eucl@min_distance
library(CloseEnough)
test <- profileplot(traj = eucl, randtraj = randeucl)
test
library(CloseEnough)
test <- profileplot(traj = eucl, randtraj = randeucl)
test
eucl@pixel_unit
library(CloseEnough)
test <- profileplot(traj = eucl, randtraj = randeucl)
test
library(CloseEnough)
test <- profileplot(traj = eucl, randtraj = randeucl)
test
library(CloseEnough)
test <- profileplot(traj = eucl, randtraj = randeucl)
test
devtools::document()
devtools::check()
devtools::document()
library(CloseEnough)
library(CloseEnough)
devtools::document()
devtools::document()
data("cellmask")
devtools::document()
devtools::document()
devtools::document()
?tools
library(tools)
dependsOnPkgs(pkgs = "EBImage", dependencies = "Importst")
dependsOnPkgs(pkgs = "EBImage", dependencies = "Imports")
dependsOnPkgs(pkgs = "EBImage")
?getFromNamespace
devtools::document()
devtools::document()
devtools::document()
warnings()
devtools::document()
devtools::document()
data(cellmovie)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
test <- as.array(cellmovie)
test1 <- test[,,1,1]
View(test1)
devtools::document()
data(cellmovies)
data(cellmovie)
test <- (as.array(cellmovie))[, , , 1:5]
test1 <- cellmovie[,,,1:5]
devtools::document()
devtools::document()
data(cellmovie)
cellmovie
data(trajectory)
trajectory["pixel_size"]
trajectory["time"]
data("coordinates")
test <- coordinates
View(test)
rm(test)
data(outline)
View(outline)
View(coordinates)
data(trajectory)
str(trajectory)
devtools::document()
library(CloseEnough)
devtools::document()
library(CloseEnough)
devtools::document()
devtools::document()
library(CloseEnough)
devtools::document()
library(CloseEnough)
devtools::document()
library(CloseEnough)
devtools::document()
library(CloseEnough)
